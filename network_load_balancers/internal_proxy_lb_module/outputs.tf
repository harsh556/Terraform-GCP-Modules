output "address" {
  description = "Forwarding rule address."
  value = {
    for k, v in module.net_lb_proxy_int : k => v.address
  }
}

output "backend_service" {
  description = "Backend resource."
  value = {
    for k, v in module.net_lb_proxy_int : k => v.backend_service
  }
}

output "backend_service_id" {
  description = "Backend id."
  value = {
    for k, v in module.net_lb_proxy_int : k => v.backend_service_id
  }
}

output "backend_service_self_link" {
  description = "Backend self link."
  value = {
    for k, v in module.net_lb_proxy_int : k => v.backend_service_self_link
  }
}

output "forwarding_rule" {
  description = "Forwarding rule resource."
  value = {
    for k, v in module.net_lb_proxy_int : k => v.forwarding_rule
  }
}

output "group_self_links" {
  description = "Optional unmanaged instance group self links."
  value = {
    for k, v in module.net_lb_proxy_int : k => v.group_self_links
  }
}

output "groups" {
  description = "Optional unmanaged instance group resources."
  value = {
    for k, v in module.net_lb_proxy_int : k => v.groups
  }
}

output "health_check" {
  description = "Auto-created health-check resource."
  value = {
    for k, v in module.net_lb_proxy_int : k => v.health_check
  }
}

output "health_check_id" {
  description = "Auto-created health-check id."
  value = {
    for k, v in module.net_lb_proxy_int : k => v.health_check_id
  }
}

output "health_check_self_link" {
  description = "Auto-created health-check self link."
  value = {
    for k, v in module.net_lb_proxy_int : k => v.health_check_self_link
  }
}

output "id" {
  description = "Fully qualified forwarding rule id."
  value = {
    for k, v in module.net_lb_proxy_int : k => v.id
  }
}

output "neg_ids" {
  description = "Autogenerated network endpoint group ids."
  value = {
    for k, v in module.net_lb_proxy_int : k => v.neg_ids
  }
}

output "service_attachment_id" {
  description = "Id of the service attachment."
  value = {
    for k, v in module.net_lb_proxy_int : k => v.service_attachment_id
  }
}